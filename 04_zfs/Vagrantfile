
# export VAGRANT_EXPERIMENTAL="disks"
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :otuslinux => {
        # :box_name => "centos/7",
        :ip_addr => '192.168.56.101',
        :disks => {
                :sata1 => {
                        :dfile => './sata1.vdi',
                        :size => 1024,  
                        :port => 1
                },
                :sata2 => {
                        :dfile => './sata2.vdi',
                        :size => 1024, 
                        :port => 2
                },
                :sata3 => {
                        :dfile => './sata3.vdi',
                        :size => 1024,  
                        :port => 3
                },
                :sata4 => {
                        :dfile => './sata4.vdi',
                        :size => 1024,  
                        :port => 4
                },

                :sata5 => {
                        :dfile => './sata5.vdi',
                        :size => 1024,  
                        :port => 5
                },
                :sata6 => {
                        :dfile => './sata6.vdi',
                        :size => 1024,  
                        :port => 6
                }

        }


  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|


      config.vm.define boxname do |box|

      
          box.vm.box = 'centos/8.4'
          box.vm.box_url = 'https://cloud.centos.org/centos/8/x86_64/images/CentOS-8-Vagrant-8.4.2105-20210603.0.x86_64.vagrant-virtualbox.box'
          box.vm.box_download_checksum = 'dfe4a34e59eb3056a6fe67625454c3607cbc52ae941aeba0498c29ee7cb9ac22'
          box.vm.box_download_checksum_type = 'sha256'
  

          box.vm.host_name = boxname.to_s
          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
                  vb.customize ["modifyvm", :id, "--memory", "2048"]
                  needsController = false
                  boxconfig[:disks].each do |dname, dconf|
                          unless File.exist?(dconf[:dfile])
                                vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

                  end

                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
          
          box.vm.provision "shell",     
            name: "Setup zfs",
            path: "setup_zfs.sh"

      end
  end
end