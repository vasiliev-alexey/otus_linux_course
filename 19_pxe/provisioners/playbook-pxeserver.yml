---
- name: Otus ansible
  hosts: all
  become: true


  tasks:
    - name: provisioner info 
      ansible.builtin.debug:
        msg: "Hi otus -task  19 {{ inventory_hostname }}"

    - name: Install a list of packages
      ansible.builtin.yum:
        name:
          - wget
          - epel-release
          - httpd
          - tftp-server
          - dhcp-server          
        state: present

    - name: create folder for images
      file:
        path: "{{  item  }}"
        state: directory
        mode: 0755
      loop:
        - /images
        - /iso

    - name: Create a ext2 filesystem on /dev/sdb1
      filesystem:
        fstype: xfs
        dev: /dev/sdb

    - name: mount /dev/sdb to /images
      mount:
        path: /images
        src: /dev/sdb
        state: mounted
        fstype: xfs

    - name: make xfs on sdb
      filesystem:
        dev: /dev/sdc
        fstype: xfs

    - name: mount /dev/sdb to /images
      mount:
        path: /iso
        src: /dev/sdc
        state: mounted
        fstype: xfs

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /iso
        owner: vagrant
        group: vagrant
        mode: '0644'        


    - name: Mount ISO image
      mount:
        path: /mnt
        src: /vagrant/CentOS-8.4.2105-x86_64-dvd1.iso
        fstype: iso9660
        opts: ro,loop
        state: mounted

    - name: copy /mnt to /iso
      copy:
        src: /mnt/
        dest: /iso/
        remote_src: true
        force: yes
      #  directory_mode: yes

    - name: start httpd
      service:
        name: httpd
        enabled: true
        state: started

    - name: copy apache conf
      template:
        src:  pxeboot.conf.j2
        dest: /etc/httpd/conf.d/pxeboot.conf
        owner: root
        group: root
        mode: '0640'

    - name: restart httpd
      service:
        name: httpd
        state: restarted
        enabled: true

    - name: start tftp
      service:
        name: tftp
        enabled: true
        state: started

    #Создаём каталог /var/lib/tftpboot/pxelinux.cfg
    - name: Create TFTP directory
      file:
        path: /var/lib/tftpboot/pxelinux.cfg
        state: directory
        mode: '0755'

    #Копируем файл-меню на сервер
    - name: set up pxelinux
      template:
        src: default
        dest: /var/lib/tftpboot/pxelinux.cfg/default
        owner: root
        group: root
        mode: '0644'

    #Извлекаем файлы из RPM-пакета
    - name: extract packages syslinux
      shell: "rpm2cpio /iso/BaseOS/Packages/syslinux-tftpboot-6.04-5.el8.noarch.rpm | cpio -i -d"
      #register: system_msg
    # - name: Print uptime of managed node
    #   debug:
    #     msg: "{{ system_msg }}"

    #Копируем файлы в каталог /var/lib/tftpboot/
    - name: copy files to TFTP share
      copy:
        src: /home/vagrant/tftpboot/{{ item }}
        dest: /var/lib/tftpboot/{{ item }}
        mode: '0644'
        remote_src: true
      with_items:
        - pxelinux.0
        - ldlinux.c32
        - libmenu.c32
        - libutil.c32
        - menu.c32
        - vesamenu.c32

    #Копируем файлы в каталог /var/lib/tftpboot/
    - name: copy initrd and vmlinuz files to TFTP share
      copy:
        src: /iso/images/pxeboot/{{ item }}
        dest: /var/lib/tftpboot/{{ item }}
        mode: '0755'
        remote_src: true
      with_items:
        - initrd.img
        - vmlinuz

    #Перезапускаем TFTP-сервер и добавляем его в автозагрузку
    - name: restart tftp-server
      service:
        name: tftp.service
        state: restarted
        enabled: true

    #Копирование файла конфигурации DHCP-сервера
    - name: set up dhcp-server
      template:
        src: dhcpd.conf
        dest: /etc/dhcp/dhcpd.conf
        mode: '0644'

    #Start dhcp-server
    - name: start dhcp-server
      service:
        name: dhcpd
        enabled: yes
        state: started

    - name: copy ks.cfg
      template:
        src: ks.cfg
        dest: /iso/ks.cfg
        owner: root
        group: root
        mode: 0755

    - name: restart dhcpd
      service:
        name: dhcpd.service
        state: restarted
        enabled: true
